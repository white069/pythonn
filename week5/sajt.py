#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Apr  8 22:44:33 2025

@author: alex
"""

def ispisati(x):
    print("#===================================================================")
    print("#Zadatak ", x)
    
    
    print("#===================================================================")
    
    
#===================================================================
#Zadatak  1
#Написати функцију која за унету ниску, враћа карактерe који се понављај
def ponavljajuci(niska):
    skup=''
    pon=''
    for i in niska:
        if i in skup:
            pon+=i
        else:
            skup+=i
    print(pon)
#===================================================================  
    
    
#===================================================================
#Zadatak  2
#Написати функцију која за унети низ, враћа број појављивања максималног члана.
def brojavanje(niz):
    brojac=0
    maks=niz[0]
    for i in niz:
        if i>maks:
            maks=i
    for j in niz:
        if j==maks:
            brojac+=1
    return brojac
#===================================================================  
    
    
    
#===================================================================
#Zadatak  3
#Написати функцију која за унети низ, враћа број појављивања минималног члана.
# niz=list(map(int,input('broj niza').split()))
# def minbroj(niz):
#     return niz.count(min(niz))
# print(minbroj(niz))
#===================================================================    
    
    
#===================================================================
#Zadatak  4
#Написати програм коjи проналази аритметичку средину свих делилаца броjа. Имати у виду да 1 дели сваки броj, као и да jе сваки броj дељив са самим собом.
def arit(broj):
    delioci=[]
    n=broj
    while n>0:
        if broj%n==0:
            delioci.append(n)
        n-=1
            
    return sum(delioci)/len(delioci)
#===================================================================    
    
    
#===================================================================
#Zadatak  5
#Написати функцију која проверава да ли је унети број Армстронгов број. Број је Армстронгов број, ако је то к-цифрен број, и једнак је суми к-тих степена својих цифара.
def amstrongovbroj(broj):
    """
    Написати функцију која проверава да ли је унети број Армстронгов број.
    Број је Армстронгов број, ако је то к-цифрен број, и једнак је суми к-тих степена својих цифара.
    Пример:
        370 = 3**3 + 7**3 + 0**3, je Aрмстронгов број
        1634 = 1**4 + 6**4 + 3**4 + 4**4, je Aрмстронгов број
        12 != 1**2 + 2**2, није Армстронгов број
    """
    k=len(broj)
    broj=int(broj)
    zbir=0 
    original=broj
    while broj>0:
        n=broj%10
        zbir+=n**k
        broj=broj//10
    if zbir==original:
        print('ovo je Amstrngov broj')
    else:
        print('OVo NIJE glupi broj')
#===================================================================  
    
    
#===================================================================
#Zadatak  6
#аписати програм коjи у задатом низу проналази елемент коjи се наjвише пута поjављуjе. Вратити елемент, као и његов одговараjући броj понављања.
def ponavljanje(niz):
    maksimum=0
    marka=niz[0]
    skup=set(niz)
    for i in skup:
        if (niz.count(i)>maksimum) or (niz.count(i)==maksimum and i>marka):
            maksimum=niz.count(i)
            marka=i
    return marka, maksimum
#===================================================================    
    
    
#===================================================================
#Zadatak  7
#Написати функцију која враћа максималну разлику суседних бројева у низу.
def razlika():
    niz=list(map(int,input('clanovi niza molim i opalim te golim ').split()))
    maksimum=0
    for i in range(len(niz)-1):
        if abs(niz[i+1]-niz[i])>maksimum:
            maksimum= abs(niz[i+1]-niz[i])
            
    return maksimum

#===================================================================   
    
    
#===================================================================
#Zadatak  8
#Написати функцију који одређује колико бројева у низу не садрже цифру 5.
def ima(niz):
    brojanje=0
    brojanje1=0
    for i in niz:
        if i==5:
            brojanje=0
        else:
            brojanje+=1
            if brojanje1<brojanje:
                brojanje1+=1
    return brojanje1
#===================================================================   
    
    
#===================================================================
#Zadatak  9
#Написати функцију која враћа два броја у низу која у збиру дају циљану вредност. У случају да не постоје, вратити -1.
def vrednost(broj, niz):
    for i in niz:
        for j in niz:
            if i+j==broj:
                return i,j
    return -1
#===================================================================
    
    
#===================================================================
#Zadatak  10
#Написати функцију која за уласку ниску враћа најкраћу и најдужу реч.
def niska(string):
    string = string.strip()  
    rec = ""
    recenica = []

    for i in string:
        if i.isalpha():
            rec += i
        elif rec:
            recenica.append(rec)
            rec = ""

    if rec:  
        recenica.append(rec)

    if recenica:
        return min(recenica, key=len), max(recenica, key=len)
    else:
        return None, None
#===================================================================  
    
    
    
#===================================================================
#Zadatak  11
#Написати функцију која за унету ниску проверава да ли се састоји само од јединствених карактера.
# def karakteri(niska):
#     if len(niska)== len(set(niska)):
#         print('karakteri su jedinstveni!!')
#     else:
#         print('karakteri nisu jedinstveni')
#===================================================================    
    
    
#===================================================================
#Zadatak  12
# Постоје три тајна природна броја, 


# Међутим, постоји начин да се из ових седам датих бројева на јединствен начин одреде 
# X
# , 
# Y
#  и 
# Z
# .

# Улазни подаци
# У првом и једином реду дато је поменутих седам природних бројева измешаних и раздвојених размаком.

# Излазни подаци
# У првом и једином реду излаза треба исписати тајне бројеве 
# X
# , 
# Y
#  и 
# Z
# , раздвојене размаком.

# Пример
# Улаз
# 2 2 11 4 9 7 9
# Излаз
# 2 2 7
# Ограничења
# 1
# ≤
# X
# ,
# Y
# ,
# Z
# ≤
# 10
# 9

# brojevi=list(map(int,input().split()))
# brojevi=sorted(brojevi)
# x=min(brojevi)
# y=brojevi[1]
# z=max(brojevi)-(x+y)
# print(x,y,z)
#===================================================================   
    
    
#===================================================================
#Zadatak  12
# Написати програм који враћа тачно један члан за који се разликују два низа бројева.

# Опис улаза
# У првом и другом реду стандардног улаза налази се по један низ природних бројева од којих један од њих има тачно један додатан члан у односу на други.

# Опис излаза
# У једном реду стандардног излаза се налази природан број који представља члан за који се унети низови разликују.

# Пример 1
# Улаз
# 2 8 5 7
# 2 4 7 5 8
# Излаз
# 4
# Пример 2
# Улаз
# 15 5 76 12 3
# 76 5 15 3
# Излаз
# 12

niz1=list(map(int,input().split()))
niz2=list(map(int,input().split()))
niz1=set(niz1)
niz2=set(niz2)
if niz1-niz2:
    print(list(niz1-niz2)[0])
else:
    print(list(niz2-niz1)[0])








#===================================================================    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    