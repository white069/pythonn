#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May  9 13:34:13 2025

@author: alex
"""

def ispisati(x):
    print("#===================================================================")
    print("#Zadatak ", x)
    
    
    print("#===================================================================")
    
    
#===================================================================
#Zadatak  1  ili 36 po redu
# Задатак: Друга вредност по величини
# У студентском удружењу се организује наградна игра. Договор је да награде добијају два члана удружења
# која имају највеће бројеве индекса. Проблем је у томе што су на постојећем списку неки студенти уписани
# и више пута. Написати програм који на основу серије бројева индекса са тог списка одређује два награђена
# студента.
# Улаз: Прва линија стандардног улаза садржи природан број N (10 ≤ N ≤ 50000) који представља број
# студената на списку. Свака од наредних N линија садржи по један природан број из интервала [1, 50000],
# који представља број индекса студената из удружења. Може се претпоставити да ће на списку постојати бар
# два различита индекса.
# Излаз: На стандардном излазу приказати индексе два награђена студента. У првом реду највећу, а у другом
# реду следећу по величини вредност међу бројевима индекса.
# Пример
# Улаз
# 5
# 22
# 35
# 71
# 71
# 22
# Излаз
# 71
# 35
# n=int(input('koliko ima ucenika na spisku '))
# indeksi=[int(input('indeks')) for i in range(n)]
# indeksi.sort()
# print(indeksi[-1])
# broj=-2
# while abs(broj)<len(indeksi):
#     if indeksi[-1]!=indeksi[broj]:
#         print(indeksi[broj])
#         break
#     broj-=1
#===================================================================  
    
#===================================================================
#Zadatak  2
# Задатак: Победник у три дисциплине
# Такмичари су радили тестове из програмирања, математике и физике. За сваки предмет добили су одређени
# број поена (цео број од 0 до 50). Такмичари се рангирају по укупном броју поена из сва три предмета. Ако
# два такмичара имају исти број поена, победник је онај који има више поена из програмирања. Ако је и
# број поена из програмирања једнак, онда се посматра број поена из математике. На крају, ако је и број
# поена из математике једнак, посматра се број поена из физике. Потребно је написати програм који одређује
# победника такмичења.
# Улаз: Учитава се прво број такмичара, а затим и подаци за сваког такмичара. За сваког такмичара учитава
# се број поена из програмирања, а затим број поена из математике, и на крају број поена из физике, сви у
# истом реду.
# Излаз: Потребно је исписати редни број победника и број његових поена из сваког предмета. Бројање
# такмичара почиње од 1. Ако су два или више такмичара остварила потпуно идентичан успех, победник је
# онај који има мањи редни број (јер је остварио више поена на квалификационом такмичењу).
# Пример
# Улаз
# 4
# 20 30 40
# 10 20 30
# 20 40 30
# 10 50 20
# Излаз
# 3: 20 40 30

# n=int(input('broj takmicara '))
# prog,mat,fiz=map(int,input('broj poena iz programiranja, matematike i fizike ').split())
#ukupno=prog+mat+fiz
# najbolji=1
# i=1
# predmeti=prog,mat,fiz
# for _ in range(1,n):
#     i+=1
#     prog1,mat1,fiz1=map(int,input('broj poena iz programiranja, matematike i fizike ').split())
#     ukupno1=prog1+mat1+fiz1
#     if (ukupno1,prog1,mat1,fiz1)>(ukupno,prog,mat,fiz):
#         ukupno=ukupno1; prog,mat,fiz=prog1,mat1,fiz1
#         najbolji=i
#         predmeti=prog1,mat1,fiz1
# print(najbolji,':',predmeti[0],' ',predmeti[1],' ',predmeti[2])
#===================================================================

#===================================================================
#Zadatak  3
# Задатак: Најмањи круг
# За дати низ тачака у равни одредити полупречник најмањег круга, са центром у координатном почетку, који
# садржи све дате тачке.
# Улаз: Са стандардног улаза у првој линији се уноси природан број n (1 ≤ n ≤ 100) који представља број
# тачака у равни, а у наредних n линија у свакој линији по два реалана броја (од −1000 до 1000), који представљају координате x и y тачке у равни.
# Излаз: На стандардни излаз исписати један реалан број (допуштена је толеранција грешке 10−5
# ) - полупречник најмањег круга са центром у координатном почетку, који садржи све учитане тачке.
# Пример
# Улаз
# 4
# 2.6 3.4
# 1.2 6.7
# 3.33 5.55
# 2.57 3.44
# Излаз
# 6.80661
# from math import sqrt
# n=int(input('broj tacaka '))
# maks=0
# for _ in range(n):
#     x,y=map(float,input('x i y ').split())
#     r=sqrt(x**2+y**2)
#     if r>=maks:
#         maks=r 
# print(f'{maks:.5f}')
#===================================================================  
    
#===================================================================
#Zadatak  4
# Задатак: Редни број максимума
# На аукцији неке слике учествује n купаца. Сваки купац је понудио извесни износ новца и сви купци су
# понудили различите износе. Написати програм којим се одређује редни број купца који је понудио највећи
# износ.
# Улаз: Прва линија стандарног улаза садржи природан број n (1 ≤ n ≤ 1000) који представља број купаца.
# У наредних n линија налази се по један позитиван реалан број, ти бројеви представљају износе новца коју
# су понудио купци редом.
# Излаз: У првој линији стандарног излаза приказати редни број купца који је понудио највећи износ новца.
# Пример
# Улаз
# 5
# 123.23
# 234.45
# 100.23
# 345.00
# 128.80
# Излаз
# 4

# n=int(input('broj kupaca '))
# i=1
# najbolji=0
# ii=0
# for _ in range(n):
#     svota=float(input('koliko money money baja ima '))
#     if svota>najbolji:
#         ii=i 
#         najbolji=svota 
#     i+=1
# print(ii)
#===================================================================  
    
#===================================================================
#Zadatak  5
# Задатак: Негативан број
# Написати програм којим се проверава да ли међу учитаним бројевима постоји негативан број.
# Улаз: Прва линија стандарног улаза садржи природан број n (1 ≤ n ≤ 100) који представља број бројева.
# Свака од наредних n линија садржи по један реалан број.
# Излаз: На стандарном излазу у једној линији исписти da ако међу учитаним бројевима постоји негативан
# број, иначе исписати ne.
# Пример 1
# Улаз
# 5
# 10.89
# 12.349
# -5.9
# 2.3
# -2.45
# Излаз
# da
# Пример 2
# Улаз
# 4
# 100.89
# 12.349
# 0
# 2.3
# Излаз
# ne
# Решење
# Коришћење логичке променљиве

# n=int(input('koliko brojevcica '))
# da=False 
# for _ in range(n):
#     broj=float(input('broj '))
#     if broj<0:
#         da=True 
# if da:
#     print('da')
# else:
#     print('ne')
#===================================================================   
    
#===================================================================
#Zadatak  6
# Задатак: Дељив бројевима од 1 до n
# Написати програм којим се проверава да ли је дати природан број k дељив свим природним бројевима од 1
# до n.
# Улаз: Прва линија стандардног улаза садржи природан број k (0 < k ≤ 109
# ), а друга линија садржи природан
# број n (1 ≤ n ≤ 10).
# Излаз: У првој линији стандардног излаза приказати реч da ако је број k дељив свим природним бројевима
# од 1 до n, иначе приказати реч ne.
# Пример 1
# Улаз
# 60
# 6
# Излаз
# da
# Пример 2
# Улаз
# 90
# 5
# Излаз
# ne

# k=int(input('broj sa kojeg gledamo deljivost '))
# n=int(input('opeg brojeva '))
# deli=True
# for i in range(1,n+1):
#     if k%i!=0:
#         deli=False
# print(('da'if deli else 'ne'))
#===================================================================   
    
#===================================================================
#Zadatak  7
# Задатак: Прва негативна температура
# Познате су температуре за сваки дан неког периода. Написати програм којим се одређује редни број дана у
# том периоду када је температура први пут била негативна.
# Улаз: Прва линија стандарног улаза садржи природан број n (3 ≤ n ≤ 365) који представља број дана
# периода. Свака од наредних n линија садржи по један цео број из интервала [−5, 40], бројеви представљају
# температуре редом за n дана периода.
# Излаз: У првој линији стандарног излаза приказати редни број дана периода када је температура први пут
# била негативна (дани се броје од 1 до n), ако такав дан не постоји приказати -1.
# Пример 1
# Улаз
# 5
# 12
# 10
# -2
# -3
# 4
# Излаз
# 3
# Пример 2
# Улаз
# 3
# 12
# 10
# 14
# Излаз
# -1
# n=int(input('broj dana '))
# i=1 
# for _ in range(n):
#     broj=int(input('temperatura dana '))
#     if broj>0:
#         i+=1
#     elif broj<0:
#         break 
# print((i if i-1!=n else -1))
#===================================================================    
    
#===================================================================
#Zadatak  8





#=================================================================== 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    